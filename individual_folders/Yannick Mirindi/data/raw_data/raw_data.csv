name: Fetch Weather Data

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight

jobs:
  fetch-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: pip install requests

      - name: Run Script
        run: |
          python - <<EOF
          import requests
          import json
          import datetime
          import csv

          # Function to fetch data from OpenWeatherMap API
          def fetch_data_openweathermap(api_url, latitude, longitude, api_key):
              # Set the date for which you want the data (e.g., 7 days ago)
              date = datetime.datetime.now() - datetime.timedelta(days=7)
              timestamp = int(date.timestamp())
              
              params = {
                  "lat": latitude,
                  "lon": longitude,
                  "dt": timestamp,
                  "appid": api_key
              }
              
              response = requests.get(api_url, params=params)
              if response.status_code == 200:
                  return response.json()
              else:
                  print(f"Error: Unable to fetch data from OpenWeatherMap (Status code: {response.status_code})")
                  return None

          # Function to save data to a CSV file
          def save_data_to_csv(data, filename):
              # Extract the relevant information from the data
              # This example assumes the data contains hourly temperature data
              hourly_data = data.get('hourly', [])
              
              # Define the CSV file header
              header = ['time', 'temperature', 'humidity', 'pressure', 'wind_speed', 'weather_description']
              
              # Open the CSV file for writing
              with open(filename, mode='w', newline='') as file:
                  writer = csv.writer(file)
                  
                  # Write the header to the CSV file
                  writer.writerow(header)
                  
                  # Write the data to the CSV file
                  for hour in hourly_data:
                      time = datetime.datetime.fromtimestamp(hour['dt']).strftime('%Y-%m-%d %H:%M:%S')
                      temperature = hour['temp']
                      humidity = hour['humidity']
                      pressure = hour['pressure']
                      wind_speed = hour['wind_speed']
                      weather_description = hour['weather'][0]['description'] if 'weather' in hour and len(hour['weather']) > 0 else 'N/A'
                      writer.writerow([time, temperature, humidity, pressure, wind_speed, weather_description])
                  print(f"Data successfully saved to {filename}")

          # Main function to orchestrate data fetching and saving
          def main():
              # Define OpenWeatherMap API details
              openweathermap_api_url = "http://api.openweathermap.org/data/2.5/onecall/timemachine"
              api_key = "b392564f5d870f4e630b78f1a6640084"  # Replace with your actual OpenWeatherMap API key
              latitude = "007c95914107673f8e78288eccdf9dc7"  # Replace with the latitude of the location
              longitude = "3214c388b6493d762f57c40b157749be"  # Replace with the longitude of the location
              
              # Fetch data from OpenWeatherMap
              openweathermap_data = fetch_data_openweathermap(openweathermap_api_url, latitude, longitude, api_key)
              
              # Save OpenWeatherMap data to a CSV file if fetched successfully
              if openweathermap_data:
                  save_data_to_csv(openweathermap_data, 'data/raw_data/urban_heat_islands_openweathermap.csv')

          # Run the main function
          if __name__ == "__main__":
              main()
          EOF
